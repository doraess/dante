{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sh",
				"showSimpleNotificationOnPebble"
			],
			[
				"read",
				"readyState"
			],
			[
				"we",
				"websocket"
			],
			[
				"w",
				"websocket"
			],
			[
				"PI",
				"PIPE_ID"
			],
			[
				"pri",
				"printDetails"
			],
			[
				"NO",
				"NOSTROMO_HUB"
			],
			[
				"NOS",
				"NOSTROMO_CHANNEL"
			],
			[
				"NOSTRO",
				"NOSTROMO_NODE"
			],
			[
				"CS",
				"CSN_PIN"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/main.c",
			"settings":
			{
				"buffer_size": 32003,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/js/pebble-js-app.coffee",
			"settings":
			{
				"buffer_size": 14004,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 1682,
				"line_ending": "Unix"
			}
		},
		{
			"file": "appinfo.json",
			"settings":
			{
				"buffer_size": 4013,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "// Generated by CoffeeScript 1.7.1\n(function() {\n  var address, addressFailure, checkConfig, config, debug, disableWs, enableWs, fetchWeather, forecast, forecastFailure, icons, locationError, locationOptions, locationSuccess, sendPebbleData, sendSuccess, socket, stocks, stocksFailure, tidyString,\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  config = {};\n\n  debug = ['WS'];\n\n  forecast = {};\n\n  address = {};\n\n  stocks = {};\n\n  socket = null;\n\n  icons = {\n    'clear-day': {\n      'icon': 0,\n      'font': 'B'\n    },\n    'clear-night': {\n      'icon': 1,\n      'font': 'C'\n    },\n    'rain': {\n      'icon': 2,\n      'font': 'R'\n    },\n    'snow': {\n      'icon': 3,\n      'font': 'W'\n    },\n    'sleet': {\n      'icon': 4,\n      'font': 'X'\n    },\n    'wind': {\n      'icon': 5,\n      'font': 'F'\n    },\n    'fog': {\n      'icon': 6,\n      'font': 'M'\n    },\n    'cloudy': {\n      'icon': 7,\n      'font': 'N'\n    },\n    'partly-cloudy-day': {\n      'icon': 8,\n      'font': 'H'\n    },\n    'partly-cloudy-night': {\n      'icon': 9,\n      'font': 'I'\n    },\n    'no-weather': {\n      'icon': 10,\n      'font': ')'\n    }\n  };\n\n  String.prototype.stripAccents = function() {\n    var translate, translate_re;\n    translate_re = /[àáâãäçèéêëìíîïñòóôõöùúûüýÿÀÁÂÃÄÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÛÜÝ]/g;\n    translate = \"aaaaaceeeeiiiinooooouuuuyyAAAAACEEEEIIIINOOOOOUUUUY\";\n    return this.replace(translate_re, function(match) {\n      return translate.substr(translate_re.source.indexOf(match) - 1, 1);\n    });\n  };\n\n  tidyString = function(str) {\n    str = str.replace(/Calle de los /, \"C. \");\n    str = str.replace(/Calle de las /, \"C. \");\n    str = str.replace(/Calle de la /, \"C. \");\n    str = str.replace(/Calle del /, \"C. \");\n    str = str.replace(/Calle de /, \"C. \");\n    str = str.replace(/Calle /, \"C. \");\n    str = str.replace(/Avenida de los /, \"Av. \");\n    str = str.replace(/Avenida de las /, \"Av. \");\n    str = str.replace(/Avenida de la /, \"Av. \");\n    str = str.replace(/Avenida del /, \"Av. \");\n    str = str.replace(/Avenida de /, \"Av. \");\n    str = str.replace(/Avenida/, \"Av. \");\n    str = str.replace(/Paseo de los /, \"P. \");\n    str = str.replace(/Paseo de las /, \"P. \");\n    str = str.replace(/Paseo de la /, \"P. \");\n    str = str.replace(/Paseo del /, \"P. \");\n    str = str.replace(/Paseo de /, \"P. \");\n    str = str.replace(/Paseo /, \"P. \");\n    str = str.replace(/Plaza de los /, \"Pz. \");\n    str = str.replace(/Plaza de las /, \"Pz. \");\n    str = str.replace(/Plaza de la /, \"Pz. \");\n    str = str.replace(/Plaza del /, \"Pz. \");\n    str = str.replace(/Plaza de /, \"Pz. \");\n    return str = str.replace(/Plaza /, \"Pz. \");\n  };\n\n  enableWs = function() {\n    if (!socket) {\n      socket = new WebSocket('ws://doraess.no-ip.org:3900/pebble');\n      if (__indexOf.call(debug, 'WS') >= 0) {\n        console.log((\"----> Habilitando websocket...\" + socket.readyState).yellow);\n      }\n      socket.addEventListener(\"open\", function() {\n        if (__indexOf.call(debug, 'WS') >= 0) {\n          console.log((\"----> Websocket abierto...\" + socket.readyState).green);\n        }\n        socket.send(\"Pebble conectado\");\n        Pebble.showSimpleNotificationOnPebble(\"Websocket\", \"Conectado con Galáctica\");\n        config.ws_enabled = true;\n        return Pebble.sendAppMessage({\n          websocket: true\n        });\n      });\n      socket.addEventListener(\"message\", function(event) {\n        return console.log(JSON.stringify(event));\n      });\n      socket.addEventListener(\"close\", function() {\n        if (__indexOf.call(debug, 'WS') >= 0) {\n          console.log(\"----> Websocket cerrado.\".green);\n        }\n        return config.ws_enabled = false;\n      });\n      return socket.addEventListener(\"error\", function(error) {\n        if (__indexOf.call(debug, 'WS') >= 0) {\n          (\"----> Error en Websocket...\" + error).green;\n        }\n        return config.ws_enabled = false;\n      });\n    } else {\n      if (__indexOf.call(debug, 'WS') >= 0) {\n        return console.log((\"----> Socket ya abierto...\" + socket.readyState).yellow);\n      }\n    }\n  };\n\n  disableWs = function() {\n    if (socket && socket.readyState === socket.OPEN) {\n      if (__indexOf.call(debug, 'WS') >= 0) {\n        console.log((\"----> Deshabilitando websocket...\" + socket.readyState).yellow);\n      }\n      socket.close();\n      socket = null;\n      Pebble.sendAppMessage({\n        websocket: false\n      });\n    } else {\n      if (__indexOf.call(debug, 'WS') >= 0) {\n        console.log((\"----> Socket ya cerrado.\" + socket.readyState).yellow);\n      }\n    }\n    return config.ws_enabled = false;\n  };\n\n  checkConfig = function(config, callback) {\n    var key, value;\n    for (key in config) {\n      value = config[key];\n      if (value === void 0 || '') {\n        Pebble.showSimpleNotificationOnPebble('Error de configuración', \"Falta el valor de \" + key + \", por favor abra la ventana de configuración e introduzca el valor correspondiente\");\n        break;\n      }\n    }\n    return callback();\n  };\n\n  sendPebbleData = function(data) {\n    var doraess, doraess_url, emoncms, emoncms_url;\n    emoncms = new XMLHttpRequest();\n    emoncms.timeout = 15000;\n    emoncms_url = \"http://emoncms.org/input/post.json?json=\" + (JSON.stringify(data)) + \"&apikey=\" + config.emoncms_api_key;\n    emoncms.open(\"GET\", encodeURI(emoncms_url, false));\n    emoncms.onreadystatechange = function() {\n      if (emoncms.readyState === 4 && emoncms.status === 200) {\n        if (__indexOf.call(debug, 'EMONCMS') >= 0) {\n          return console.log(emoncms.responseText);\n        }\n      }\n    };\n    if (__indexOf.call(debug, 'EMONCMS') >= 0) {\n      console.log(\"----> Enviando request a emoncms ... \".yellow + emoncms_url.green);\n    }\n    emoncms.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n    emoncms.send();\n    doraess = new XMLHttpRequest();\n    doraess.timeout = 15000;\n    doraess_url = \"http://doraess.no-ip.org:3330/input/post.json?json=\" + (JSON.stringify(data)) + \"&apikey=77c3bf24f69e048cd6b2ee11321432cf\";\n    doraess.open(\"GET\", encodeURI(doraess_url, false));\n    doraess.onreadystatechange = function() {\n      if (doraess.readyState === 4 && doraess.status === 200) {\n        if (__indexOf.call(debug, 'EMONCMS') >= 0) {\n          return console.log(doraess.responseText);\n        }\n      }\n    };\n    if (__indexOf.call(debug, 'EMONCMS') >= 0) {\n      console.log(\"----> Enviando request a doraess ... \".yellow + doraess_url.green);\n    }\n    doraess.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n    return doraess.send();\n  };\n\n  fetchWeather = function(latitude, longitude) {\n    var data, location, location_url, stock, stock_url, weather, weather_url;\n    checkConfig(config, function() {\n      if (__indexOf.call(debug, 'FORECAST') >= 0) {\n        return console.log(\"----> Usando configuración ... \\n\".green + render(config, void 0, 10));\n      }\n    });\n    data = {};\n    weather = new XMLHttpRequest();\n    weather.timeout = 15000;\n    weather_url = \"https://api.forecast.io/forecast/\" + config.forecast_api_key + \"/\" + latitude + \",\" + longitude + \"?units=auto&exclude=hourly,alerts\";\n    weather.open(\"GET\", weather_url, true);\n    weather.onreadystatechange = function() {\n      var response;\n      if (weather.readyState === 4 && weather.status === 200) {\n        response = JSON.parse(weather.responseText);\n        if (response) {\n          forecast = response;\n          Pebble.sendAppMessage(data = {\n            icon: icons[response.currently.icon].font,\n            temperature: Math.round(response.currently.temperature) + \"° \" + Math.round(response.currently.humidity * 100) + \"%\",\n            clouds: \" \" + Math.round(response.currently.cloudCover * 100) + \"% \",\n            rain_prob: Math.round(response.currently.precipProbability * 100) >= 1 ? \" \" + Math.round(response.currently.precipProbability * 100) + \"% \" : \"\",\n            rain: Math.ceil(response.currently.precipIntensity * 2.54) >= 1 ? \" \" + Math.ceil(response.currently.precipIntensity * 2.54) + \"cm\" : \"\",\n            moon: parseInt(response.daily.data[0].moonPhase * 100)\n          }, sendSuccess, forecastFailure);\n          if (__indexOf.call(debug, 'FORECAST') >= 0) {\n            return console.log(\"----> Sincronizando datos: \\n\".green + render(data, void 0, 10));\n          }\n        } else {\n          if (__indexOf.call(debug, 'FORECAST') >= 0) {\n            return console.log(\"----> Error en la respuesta de forecast.io\".red);\n          }\n        }\n      }\n    };\n    weather.ontimeout = function() {\n      if (__indexOf.call(debug, 'FORECAST') >= 0) {\n        console.log(\"----> Timeout en la solicitud a forecast.io\".red);\n      }\n      forecast.icon = ')';\n      forecast.temperature = 'Error';\n      forecast.clouds = '';\n      forecast.rain_prob = '';\n      forecast.rain = '';\n      return Pebble.sendAppMessage(forecast, sendSuccess, forecastFailure);\n    };\n    if (__indexOf.call(debug, 'FORECAST') >= 0) {\n      console.log(\"----> Enviando request a forecast.io ... \".yellow + weather_url.green);\n    }\n    weather.send();\n    location = new XMLHttpRequest();\n    location.timeout = 15000;\n    location_url = \"http://maps.googleapis.com/maps/api/geocode/json?latlng=\" + latitude + \",\" + longitude + \"&sensor=true\";\n    location.open(\"GET\", location_url, true);\n    location.onreadystatechange = function() {\n      var component, response, _i, _len, _ref;\n      if (location.readyState === 4 && location.status === 200) {\n        response = JSON.parse(location.responseText);\n        if (response) {\n          _ref = response.results[0].address_components;\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            component = _ref[_i];\n            if (__indexOf.call(component.types, 'street_number') >= 0) {\n              address.number = parseInt(component.long_name);\n            }\n            if (__indexOf.call(component.types, 'route') >= 0) {\n              address.street = tidyString(component.long_name.toString('utf-8')) + [address.number ? \", \" + address.number : void 0];\n            }\n            if (__indexOf.call(component.types, 'locality') >= 0) {\n              address.city = component.long_name;\n            }\n          }\n          Pebble.sendAppMessage(address, sendSuccess, addressFailure);\n          if (__indexOf.call(debug, 'FORECAST') >= 0) {\n            return console.log(\"----> Sincronizando datos: \\n\".green + render(address, void 0, 10));\n          }\n        } else {\n          if (__indexOf.call(debug, 'FORECAST') >= 0) {\n            return console.log(\"----> Error en la respuesta de google\".red);\n          }\n        }\n      }\n    };\n    location.ontimeout = function() {\n      address.city = 'Error';\n      address.street = 'Timeout en la solicitud';\n      if (__indexOf.call(debug, 'FORECAST') >= 0) {\n        console.log(\"----> Timeout en la solicitud a google\".red);\n      }\n      return Pebble.sendAppMessage(address, sendSuccess, addressFailure);\n    };\n    if (__indexOf.call(debug, 'FORECAST') >= 0) {\n      console.log(\"----> Enviando request a google ... \".yellow + location_url.green);\n    }\n    location.send();\n    stock = new XMLHttpRequest();\n    stock.timeout = 15000;\n    stock_url = \"http://es.finance.yahoo.com/q?s=\" + config.stock_symbol;\n    stock.open(\"GET\", stock_url, true);\n    stock.onreadystatechange = function() {\n      var percent, updown, value;\n      if (stock.readyState === 4 && stock.status === 200) {\n        value = /yfs_l84_[a-z.]*\\\">([0-9,]*)/i.exec(this.response);\n        percent = /yfs_p43_[a-z.]*\\\">\\(([0-9,]*)/i.exec(this.response);\n        updown = /class=\\\"([_upgdownr]*) time_rtq_content\\\"/i.exec(this.response);\n        if (value && percent && updown) {\n          stocks.stocks = config.stock_symbol + ': ' + value[1] + '€ (' + [updown[1] === 'up_g' ? '+' : '-'] + percent[1] + '%)';\n        }\n        if (__indexOf.call(debug, 'FORECAST') >= 0) {\n          console.log(\"----> Sincronizando datos: \\n\".green + render(stocks, void 0, 10));\n        }\n        return Pebble.sendAppMessage(stocks, sendSuccess, stocksFailure);\n      }\n    };\n    stock.ontimeout = function() {\n      if (__indexOf.call(debug, 'FORECAST') >= 0) {\n        return console.log(\"----> Timeout en la solicitud a yahoo finance\".red);\n      }\n    };\n    if (__indexOf.call(debug, 'FORECAST') >= 0) {\n      console.log(\"----> Enviando request a yahoo finance ... \".yellow + stock_url.green);\n    }\n    return stock.send();\n  };\n\n  addressFailure = function(e) {\n    if (__indexOf.call(debug, 'SYNC') >= 0) {\n      console.log(\"----> Error en la sincronización: \\n\".red + render(e, void 0, 10));\n    }\n    return Pebble.sendAppMessage(address, sendSuccess, addressFailure);\n  };\n\n  stocksFailure = function(e) {\n    if (__indexOf.call(debug, 'SYNC') >= 0) {\n      console.log(\"----> Error en la sincronización: \\n\".red + render(e, void 0, 10));\n    }\n    return Pebble.sendAppMessage(stocks, sendSuccess, stocksFailure);\n  };\n\n  forecastFailure = function(e) {\n    if (__indexOf.call(debug, 'SYNC') >= 0) {\n      console.log(\"----> Error en la sincronización: \\n\".red + render(e, void 0, 10));\n    }\n    return Pebble.sendAppMessage(forecast, sendSuccess, forecastFailure);\n  };\n\n  sendSuccess = function() {\n    if (__indexOf.call(debug, 'SYNC') >= 0) {\n      return console.log(\"----> Datos sincronizados\".green);\n    }\n  };\n\n  locationSuccess = function(pos) {\n    var coordinates;\n    coordinates = pos.coords;\n    return fetchWeather(coordinates.latitude, coordinates.longitude);\n  };\n\n  locationError = function(err) {\n    console.warn(\"location error (\" + err.code + \"): \" + err.message);\n    return Pebble.sendAppMessage({\n      city: \"Loc Unavailable\",\n      temperature: \"N/A\"\n    });\n  };\n\n  locationOptions = {\n    timeout: 15000,\n    maximumAge: 60000,\n    enableHighAccuracy: true\n  };\n\n  Pebble.addEventListener(\"ready\", function(e) {\n    var json;\n    console.log(\"----> La aplicación está lista: \".green + Pebble.getAccountToken().green);\n    console.log(\"----> Plataforma: \\n\".green + render(navigator, void 0, 10));\n    if (__indexOf.call(debug, 'INFO') >= 0) {\n      console.log(\"----> Document: \\n\".green + render(document, void 0, 10));\n    }\n    if (config.ws_enabled) {\n      enableWs();\n    }\n    json = window.localStorage.getItem('config');\n    if (typeof json === 'string') {\n      config = JSON.parse(json);\n      checkConfig(config, function() {\n        if (__indexOf.call(debug, 'INFO') >= 0) {\n          return console.log(\"----> Cargando datos de configuracion...\\n\".green + render(config, void 0, 10));\n        }\n      });\n    }\n    if (__indexOf.call(debug, 'INFO') >= 0) {\n      return console.log(\"---->Pebble Account Token: \".green + Pebble.getAccountToken().yellow);\n    }\n  });\n\n  document.addEventListener(\"devicemotion\", function(ev) {\n    var accel;\n    accel = ev.accelerationIncludingGravity;\n    return console.log(accel.x, accel.y, accel.z);\n  }, false);\n\n  Pebble.addEventListener(\"appmessage\", function(e) {\n    if (__indexOf.call(debug, 'FORECAST') >= 0) {\n      console.log(JSON.stringify(e.payload));\n    }\n    if (e.payload.command) {\n      if (__indexOf.call(debug, 'FORECAST') >= 0) {\n        console.log(\"----> Solicitud de actualización\".green);\n      }\n      navigator.geolocation.getCurrentPosition(locationSuccess, locationError, locationOptions);\n    }\n    if (e.payload.pebble_battery) {\n      if (__indexOf.call(debug, 'FORECAST') >= 0) {\n        console.log(\"----> Envío de datos del Pebble ...\\n\".green + render(e.payload, void 0, 10));\n      }\n      if (forecast.currently) {\n        sendPebbleData({\n          pebble_battery: e.payload.pebble_battery,\n          pebble_temperature: forecast.currently.temperature,\n          pebble_humidity: parseInt(forecast.currently.humidity * 100)\n        });\n      } else {\n        sendPebbleData({\n          pebble_battery: e.payload.pebble_battery\n        });\n      }\n    }\n    if (e.payload.websocket) {\n      return enableWs();\n    } else {\n      return disableWs();\n    }\n  });\n\n  Pebble.addEventListener(\"webviewclosed\", function(e) {\n    if (e.response) {\n      config = JSON.parse(e.response);\n      if (__indexOf.call(debug, 'INFO') >= 0) {\n        console.log(\"----> Opciones: \\n\".green + render(config, void 0, 10));\n      }\n      if (__indexOf.call(debug, 'INFO') >= 0) {\n        console.log(\"----> Webview cerrada.\".yellow);\n      }\n      navigator.geolocation.getCurrentPosition(locationSuccess, locationError, locationOptions);\n      window.localStorage.setItem('config', e.response);\n      if (config.ws_enabled === true) {\n        return enableWs();\n      } else {\n        return disableWs();\n      }\n    }\n  });\n\n  Pebble.addEventListener(\"showConfiguration\", function(e) {\n    var uri;\n    uri = \"http://doraess.github.io/pebble/dante/?\" + (\"forecast_api_key=\" + (encodeURIComponent(config.forecast_api_key))) + (\"&emoncms_api_key=\" + (encodeURIComponent(config.emoncms_api_key))) + (\"&stock_symbol=\" + (encodeURIComponent(config.stock_symbol))) + (\"&ws_enabled=\" + (encodeURIComponent(config.ws_enabled)));\n    if (__indexOf.call(debug, 'INFO') >= 0) {\n      console.log(\"----> Abriendo configuración ... \".yellow + uri.green);\n    }\n    return Pebble.openURL(uri);\n  });\n\n}).call(this);\n\n/**---------- Library src/js/libs/colours.js -----------**/ \n\n// Generated by CoffeeScript 1.6.3\n/*\n@license colour.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\nReleased under the MIT-License\nsee: https://github.com/dcodeIO/colour.js for details\n*/\n\n\n(function() {\n  (function(global) {\n    var addProperty, applyTheme, browserStyles, colour, consoleStyles, cssStyles, definedGetters, installed, prototypeBlacklist, rainbowColours, sequencer, strip, stylize;\n    addProperty = function(col, func) {\n      colour[col] = function(str) {\n        return func.apply(str);\n      };\n      try {\n        String.prototype.__defineGetter__(col, func);\n        return definedGetters[col] = func;\n      } catch (_error) {}\n    };\n\n    stylize = function(str, style) {\n      return consoleStyles[style][0] + str + consoleStyles[style][1];\n    };\n\n    applyTheme = function(theme) {\n      return Object.keys(theme).forEach(function(prop) {\n        if (prototypeBlacklist.indexOf(prop) >= 0) {\n          return;\n        }\n        if (typeof theme[prop] === \"string\") {\n          theme[prop] = theme[prop].split(\" \");\n        }\n        return addProperty(prop, function() {\n          var ret, t;\n          ret = this;\n          t = 0;\n          while (t < theme[prop].length) {\n            ret = colour[theme[prop][t]](ret);\n            t++;\n          }\n          return ret;\n        });\n      });\n    };\n\n    sequencer = function(map) {\n      return function() {\n        var i;\n        if (this === undefined) {\n          return \"\";\n        }\n        i = 0;\n        return String.prototype.split.apply(this, [\"\"]).map(map).join(\"\");\n      };\n    };\n\n    strip = function() {\n      return this.replace(/\\x1B\\[\\d+m/g, \"\").replace(/<\\/?(?:span|u|i|u|del)\\b[^>]*>/g, \"\");\n    };\n    \"use strict\";\n    colour = {};\n    colour.mode = \"console\";\n    colour.headless = typeof global[\"window\"] === \"undefined\";\n    colour.themes = {};\n    consoleStyles = {\n      bold: [\"\\u001b[1m\", \"\\u001b[22m\"],\n      italic: [\"\\u001b[3m\", \"\\u001b[23m\"],\n      underline: [\"\\u001b[4m\", \"\\u001b[24m\"],\n      inverse: [\"\\u001b[7m\", \"\\u001b[27m\"],\n      strikethrough: [\"\\u001b[9m\", \"\\u001b[29m\"],\n      white: [\"\\u001b[37m\", \"\\u001b[39m\"],\n      gray: [\"\\u001b[90m\", \"\\u001b[39m\"],\n      grey: [\"\\u001b[90m\", \"\\u001b[39m\"],\n      black: [\"\\u001b[30m\", \"\\u001b[39m\"],\n      blue: [\"\\u001b[34m\", \"\\u001b[39m\"],\n      cyan: [\"\\u001b[36m\", \"\\u001b[39m\"],\n      green: [\"\\u001b[32m\", \"\\u001b[39m\"],\n      magenta: [\"\\u001b[35m\", \"\\u001b[39m\"],\n      red: [\"\\u001b[31m\", \"\\u001b[39m\"],\n      yellow: [\"\\u001b[33m\", \"\\u001b[39m\"]\n    };\n    browserStyles = {\n      bold: [\"<b>\", \"</b>\"],\n      italic: [\"<i>\", \"</i>\"],\n      underline: [\"<u>\", \"</u>\"],\n      inverse: [\"<span style=\\\"background-color:black;color:white;\\\">\", \"</span>\"],\n      strikethrough: [\"<del>\", \"</del>\"],\n      white: [\"<span style=\\\"color:white;\\\">\", \"</span>\"],\n      gray: [\"<span style=\\\"color:gray;\\\">\", \"</span>\"],\n      grey: [\"<span style=\\\"color:grey;\\\">\", \"</span>\"],\n      black: [\"<span style=\\\"color:black;\\\">\", \"</span>\"],\n      blue: [\"<span style=\\\"color:blue;\\\">\", \"</span>\"],\n      cyan: [\"<span style=\\\"color:cyan;\\\">\", \"</span>\"],\n      green: [\"<span style=\\\"color:green;\\\">\", \"</span>\"],\n      magenta: [\"<span style=\\\"color:magenta;\\\">\", \"</span>\"],\n      red: [\"<span style=\\\"color:red;\\\">\", \"</span>\"],\n      yellow: [\"<span style=\\\"color:yellow;\\\">\", \"</span>\"]\n    };\n    cssStyles = {\n      bold: [\"<span class=\\\"ansi-escape ansi-escape-bold\\\">\", \"</span>\"],\n      italic: [\"<span class=\\\"ansi-escape ansi-escape-italic\\\">\", \"</span>\"],\n      underline: [\"<span class=\\\"ansi-escape ansi-escape-underline\\\">\", \"</span>\"],\n      inverse: [\"<span class=\\\"ansi-escape ansi-escape-inverse\\\">\", \"</span>\"],\n      strikethrough: [\"<span class=\\\"ansi-escape ansi-escape-strikethrough\\\">\", \"</span>\"],\n      white: [\"<span class=\\\"ansi-escape ansi-escape-white\\\">\", \"</span>\"],\n      gray: [\"<span class=\\\"ansi-escape ansi-escape-gray\\\">\", \"</span>\"],\n      grey: [\"<span class=\\\"ansi-escape ansi-escape-grey\\\">\", \"</span>\"],\n      black: [\"<span class=\\\"ansi-escape ansi-escape-black\\\">\", \"</span>\"],\n      blue: [\"<span class=\\\"ansi-escape ansi-escape-blue\\\">\", \"</span>\"],\n      cyan: [\"<span class=\\\"ansi-escape ansi-escape-cyan\\\">\", \"</span>\"],\n      green: [\"<span class=\\\"ansi-escape ansi-escape-green\\\">\", \"</span>\"],\n      magenta: [\"<span class=\\\"ansi-escape ansi-escape-magenta\\\">\", \"</span>\"],\n      red: [\"<span class=\\\"ansi-escape ansi-escape-red\\\">\", \"</span>\"],\n      yellow: [\"<span class=\\\"ansi-escape ansi-escape-yellow\\\">\", \"</span>\"]\n    };\n    definedGetters = {};\n    installed = true;\n    colour.uninstall = function() {\n      if (installed) {\n        Object.keys(definedGetters).forEach(function(color) {\n          var e;\n          try {\n            return String.prototype.__defineGetter__(color, null);\n          } catch (_error) {\n            e = _error;\n            return delete String.prototype[color];\n          }\n        });\n        installed = false;\n        return true;\n      }\n      return false;\n    };\n    colour.install = function() {\n      if (!installed) {\n        Object.keys(definedGetters).forEach(function(color) {\n          return String.prototype.__defineGetter__(color, definedGetters[color]);\n        });\n        installed = true;\n        return true;\n      }\n      return false;\n    };\n    rainbowColours = [\"red\", \"yellow\", \"green\", \"blue\", \"magenta\"];\n    prototypeBlacklist = [\"__defineGetter__\", \"__defineSetter__\", \"__lookupGetter__\", \"__lookupSetter__\", \"charAt\", \"constructor\", \"hasOwnProperty\", \"isPrototypeOf\", \"propertyIsEnumerable\", \"toLocaleString\", \"toString\", \"valueOf\", \"charCodeAt\", \"indexOf\", \"lastIndexof\", \"length\", \"localeCompare\", \"match\", \"replace\", \"search\", \"slice\", \"split\", \"substring\", \"toLocaleLowerCase\", \"toLocaleUpperCase\", \"toLowerCase\", \"toUpperCase\", \"trim\", \"trimLeft\", \"trimRight\"];\n    colour.setTheme = function(theme) {\n      var err;\n      if (typeof theme === \"string\") {\n        if (typeof colour.themes[theme] !== \"undefined\") {\n          applyTheme(colour.themes[theme]);\n          return colour.themes[theme];\n        }\n        try {\n          colour.themes[theme] = require(theme);\n          applyTheme(colour.themes[theme]);\n          return colour.themes[theme];\n        } catch (_error) {\n          err = _error;\n          return err;\n        }\n      } else {\n        return applyTheme(theme);\n      }\n    };\n    colour.addSequencer = function(name, map) {\n      return addProperty(name, sequencer(map));\n    };\n    Object.keys(consoleStyles).forEach(function(style) {\n      return addProperty(style, function() {\n        return stylize(this, style);\n      });\n    });\n    colour.addSequencer(\"rainbow\", function(letter, i) {\n      if (letter === \" \") {\n        return letter;\n      } else {\n        return stylize(letter, rainbowColours[i++ % rainbowColours.length]);\n      }\n    });\n    colour.addSequencer(\"zebra\", sequencer(function(letter, i) {\n      if (i % 2 === 0) {\n        return letter;\n      } else {\n        return letter.inverse;\n      }\n    }));\n    addProperty(\"strip\", strip);\n    addProperty(\"stripColors\", strip);\n    if (typeof module !== \"undefined\" && module[\"exports\"]) {\n      return module.exports = colour;\n    } else if (typeof define !== \"undefined\" && define.amd) {\n      define(\"colour\", function() {\n        return colour;\n      });\n      return define(\"colors\", function() {\n        return colour;\n      });\n    } else {\n      colour.mode = \"browser\";\n      return global[\"colour\"] = global[\"colors\"] = colour;\n    }\n  })(this);\n\n}).call(this);\n\n/**---------- Library src/js/libs/prettyjson.js -----------**/ \n\nfunction render(data, options, indentation) {\n  \"use strict\";\n\n  // Default value for the indentation param\n  indentation = indentation || 0;\n\n  // Default values for the options\n  options = options || {};\n  options.emptyArrayMsg = options.emptyArrayMsg || '(empty array)';\n  options.keysColor = options.keysColor || \"cyan\";\n  options.dashColor = options.dashColor || \"green\";\n  options.defaultIndentation = options.defaultIndentation || 2;\n\n  options.stringColor = options.stringColor || \"yellow\";\n\n  // Initialize the output (it's an array of lines)\n  var output = [];\n\n  // Helper function to detect if an object can be serializable directly\n  var isSerializable = function(input) {\n    if (typeof input === 'string' || typeof input === 'boolean' ||\n        typeof input === 'number' || input === null) {\n      return true;\n    }\n    return false;\n  };\n\n  var addColorToData = function(input) {\n    if (typeof input === 'string') {\n      // Print strings in regular terminal color\n      return options.stringColor ? input[options.stringColor] : input;\n    }\n\n    if (input === true) {\n      return (input+'').green;\n    }\n    if (input === false) {\n      return (input+'').red;\n    }\n    if (input === null) {\n      return (input+'').grey;\n    }\n    if (typeof input === 'number') {\n      return (input+'').blue;\n    }\n    return (input+'');\n  };\n\n  // Render a string exactly equal\n  if (isSerializable(data)) {\n    output.push(indent(indentation) + addColorToData(data));\n  }\n  else if (Array.isArray(data)) {\n    // If the array is empty, render the `emptyArrayMsg`\n    if (data.length === 0) {\n      output.push(indent(indentation) + options.emptyArrayMsg);\n    } else {\n      data.forEach(function(element) {\n        // Prepend the dash at the begining of each array's element line\n        var line = indent(indentation) + ('- ')[options.dashColor];\n\n        // If the element of the array is a string, render it in the same line\n        if (typeof element === 'string') {\n          line += render(element, options);\n          output.push(line);\n\n        // If the element of the array is an array or object, render it in next line\n        } else {\n          output.push(line);\n          output.push(\n            render(element, options, indentation + options.defaultIndentation)\n          );\n        }\n      });\n    }\n  }\n  else if (typeof data === 'object') {\n    // Get the size of the longest index to render all the values on the same column\n    var maxIndexLength = getMaxIndexLength(data);\n    var key;\n    var isError = data instanceof Error;\n\n    Object.getOwnPropertyNames(data).forEach(function(i) {\n      // Prepend the index at the beginning of the line\n      key = indent(indentation) + (i + ': ')[options.keysColor];\n\n      // Skip `undefined`, it's not a valid JSON value.\n      if (data[i] === undefined) {\n        return;\n      }\n\n      // If the value is serializable, render it in the same line\n      if (isSerializable(data[i]) && (!isError || i !== 'stack')) {\n        key += render(data[i], options, maxIndexLength - i.length);\n        output.push(key);\n\n        // If the index is an array or object, render it in next line\n      } else {\n        output.push(key);\n        output.push(\n          render(\n            isError && i === 'stack'\n              ? data[i].split('\\n')\n              : data[i],\n            options, indentation + options.defaultIndentation\n          )\n        );\n      }\n    });\n  }\n  // Return all the lines as a string\n  return output.join('\\n');\n};\n\nfunction renderString(data, options, indentation) {\n  \"use strict\";\n\n  var output = '';\n  var parsedData;\n  // If the input is not a string or if it's empty, just return an empty string\n  if (typeof data !== 'string' || data === '') {\n    return '';\n  }\n\n  // Remove non-JSON characters from the beginning string\n  if (data[0] !== '{' && data[0] !== '[') {\n    var beginingOfJson;\n    if (data.indexOf('{') === -1) {\n      beginingOfJson = data.indexOf('[');\n    } else if (data.indexOf('[') === -1) {\n      beginingOfJson = data.indexOf('{');\n    } else {\n      beginingOfJson = data.indexOf('{') < data.indexOf('[') ? data.indexOf('{') : data.indexOf('[');\n    }\n    output += data.substr(0, beginingOfJson) + \"\\n\";\n    data = data.substr(beginingOfJson);\n  }\n\n  try {\n    parsedData = JSON.parse(data);\n  } catch (e) {\n    // Return an error in case of an invalid JSON\n    return 'Error:'.red + ' Not valid JSON!';\n  }\n\n  // Call the real render() method\n  output += render(parsedData, options);\n  return output;\n};\n\n/**---------- Library src/js/libs/utils.js -----------**/ \n\n\"use strict\";\n\n/**\n * Creates a string with the same length as `numSpaces` parameter\n **/\nfunction indent(numSpaces) {\n  return new Array(numSpaces+1).join(' ');\n};\n\n/**\n * Gets the string length of the longer index in a hash\n **/\ngetMaxIndexLength = function(input) {\n  var maxWidth = 0;\n  var key;\n\n  Object.getOwnPropertyNames(input).forEach(function(key) {\n    maxWidth = Math.max(maxWidth, key.length);\n  });\n  return maxWidth;\n};\n",
			"file": "src/js/pebble-js-app.js",
			"file_size": 30102,
			"file_write_time": 1405337352000000,
			"settings":
			{
				"buffer_size": 30053,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/js/config.jade",
			"settings":
			{
				"buffer_size": 2817,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 287.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"git pus",
				"Git: Push"
			],
			[
				"git",
				"Git: Commit history"
			]
		],
		"width": 485.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/alberto/Library/Application Support/Sublime Text 2/Packages/User/Pebble.sublime-build",
		"/Users/alberto/Documents/Proyectos/arduino/libraries/EtherCard/EtherCard.h",
		"/Users/alberto/Documents/Proyectos/arduino/NostromoHub-Ethernet/NostromoHub-Ethernet.ino",
		"/Users/alberto/Documents/Proyectos/arduino/NostromoHub/NostromoHub.ino",
		"/Users/alberto/Documents/Proyectos/arduino/NodoNostromo_ino/NodoNostromo_ino.ino",
		"/Users/alberto/Documents/Proyectos/arduino/NostromoHub/printf.h",
		"/Users/alberto/Documents/Proyectos/node/spn/spn2.coffee",
		"/Users/alberto/Documents/Proyectos/arduino/NodoNostromo_ino/printf.h",
		"/Users/alberto/Library/Application Support/Sublime Text 2/Packages/Terminal/iTerm.sh",
		"/Users/alberto/Library/Application Support/Sublime Text 2/Packages/Terminal/Terminal.sublime-settings",
		"/Users/alberto/Library/Application Support/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/Users/alberto/Documents/Proyectos/arduino/libraries/RF24/RF24.cpp",
		"/Users/alberto/Documents/Proyectos/arduino/NodoNostromo/NodoNostromo.ino",
		"/Users/alberto/Documents/Proyectos/arduino/libraries/RF24/RF24.h",
		"/Users/alberto/Library/Application Support/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/Users/alberto/Library/Application Support/Sublime Text 2/Packages/Pretty JSON/Pretty JSON.sublime-settings",
		"/Users/alberto/Library/Application Support/Sublime Text 2/Packages/User/SublimeLinter.sublime-settings",
		"/Users/alberto/Documents/Proyectos/pebble/dante/prueba.html",
		"/Users/alberto/Documents/Proyectos/pebble/dante/prueba",
		"/Users/alberto/Documents/Proyectos/pebble/dante/src/js/pebble-js-app.coffee",
		"/Users/alberto/Documents/Proyectos/pebble/dante/Makefile",
		"/Users/alberto/Library/Application Support/Sublime Text 2/Packages/Git/Git.sublime-settings",
		"/Users/alberto/Library/Application Support/Sublime Text 2/Packages/Emmet/Default (OSX).sublime-keymap",
		"/Users/alberto/Documents/Proyectos/pebble/dante/make.bash"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"send_cm",
			"send_com",
			"printf_P",
			"if debug"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"if 'WS' in debug"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/main.c",
					"settings":
					{
						"buffer_size": 32003,
						"regions":
						{
						},
						"selection":
						[
							[
								22094,
								22094
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110.0
							],
							"gjslint_options":
							[
							],
							"incomplete_sync": null,
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"remote_loading": false,
							"sublimelinter": true,
							"sublimelinter_delay": 2.0,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"synced": false,
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9084.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/js/pebble-js-app.coffee",
					"settings":
					{
						"buffer_size": 14004,
						"regions":
						{
						},
						"selection":
						[
							[
								7001,
								7001
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110.0
							],
							"gjslint_options":
							[
							],
							"incomplete_sync": null,
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"remote_loading": false,
							"sublimelinter": true,
							"sublimelinter_delay": 2.0,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"synced": false,
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3414.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Makefile",
					"settings":
					{
						"buffer_size": 1682,
						"regions":
						{
						},
						"selection":
						[
							[
								467,
								467
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110.0
							],
							"gjslint_options":
							[
							],
							"incomplete_sync": null,
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"remote_loading": false,
							"sublimelinter": true,
							"sublimelinter_delay": 2.0,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"synced": false,
							"syntax": "Packages/Makefile Improved/Makefile Improved.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 79.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "appinfo.json",
					"settings":
					{
						"buffer_size": 4013,
						"regions":
						{
						},
						"selection":
						[
							[
								517,
								517
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110.0
							],
							"gjslint_options":
							[
							],
							"incomplete_sync": null,
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"remote_loading": false,
							"sublimelinter": true,
							"sublimelinter_delay": 2.0,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"synced": false,
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/js/pebble-js-app.js",
					"settings":
					{
						"buffer_size": 30053,
						"regions":
						{
						},
						"selection":
						[
							[
								4610,
								4610
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110.0
							],
							"gjslint_options":
							[
							],
							"incomplete_sync": null,
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"remote_loading": false,
							"sublimelinter": true,
							"sublimelinter_delay": 2.0,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"synced": false,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/js/config.jade",
					"settings":
					{
						"buffer_size": 2817,
						"regions":
						{
						},
						"selection":
						[
							[
								1099,
								1099
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110.0
							],
							"gjslint_options":
							[
							],
							"incomplete_sync": null,
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"remote_loading": false,
							"sublimelinter": true,
							"sublimelinter_delay": 2.0,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"synced": false,
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 328.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.Blink_1":
	{
		"height": 100.0
	},
	"output.NodoNostromo":
	{
		"height": 100.0
	},
	"output.NodoNostromo_ino":
	{
		"height": 106.0
	},
	"output.NostromoHub":
	{
		"height": 106.0
	},
	"output.NostromoHub-Ethernet":
	{
		"height": 106.0
	},
	"output.exec":
	{
		"height": 206.0
	},
	"output.git":
	{
		"height": 151.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"output.stino_log":
	{
		"height": 100.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 188.0,
	"status_bar_visible": true
}
